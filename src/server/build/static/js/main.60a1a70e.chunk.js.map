{"version":3,"sources":["composer/theme.js","composer/Components.tsx","composer/Compose.tsx","composer/mode.js","composer/template.js","composer/utils.ts","settings.ts","Paths.tsx","serviceWorker.ts","index.tsx"],"names":["ace","define","require","exports","module","isDark","cssClass","cssText","importCssString","m","State","Title","styled","h1","SubTitle","p","StateText","props","color","Space","div","VimBox","VimText","label","CheckBox","input","ButtonBox","Button","button","TopBox","CustomHighlightRules","$rules","start","token","regex","window","acequire","TextHighlightRules","WSCMode","HighlightRules","lineCommentStart","getNextLineIndent","state","line","tab","indent","this","$getIndent","tokens","getTokenizer","getLineTokens","length","type","match","Mode","template","displayError","error","n_lines","renderSpace","setMarkers","makeMarker","column","editor","gotoLine","startRow","startCol","endRow","endCol","className","Settings","backend","BACKEND_RENDER_URL","customMode","Compose","useState","Cool","setState","save","setSave","vim","setVim","setRenderSpace","language","setLanguage","render","setRender","markers","useEffect","a","Rendering","axios","post","response","data","response_type","localStorage","setItem","split","console","log","submit","getSession","setMode","setTheme","stored","getItem","getStoredLanguage","RenderState","onClick","name","checked","onChange","focus","ref","el","placeholder","mode","theme","keyboardHandler","value","l","fontSize","showPrintMargin","showGutter","highlightActiveLine","setOptions","showLineNumbers","tabSize","commands","bindKey","win","mac","exec","style","height","width","marginLeft","Paths","path","children","React","Boolean","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.60a1a70e.chunk.js","sourcesContent":["import ace from 'brace';\n\nace.define('ace/theme/wsc', ['require', 'exports', 'module', 'ace/lib/dom'], function(\n  require,\n  exports,\n  module\n) {\n  exports.isDark = true;\n  exports.cssClass = 'ace-wsc-theme';\n  exports.cssText =\n    // eslint-disable-next-line\n    '.ace-wsc-theme .ace_gutter {\\\nbackground: #1a0005;\\\n}\\\n.ace-wsc-theme {\\\nbackground: #1a0005;\\\ncolor: #929292\\\n  font-color: red\\\n}\\\n.ace-wsc-theme .ace_print-margin {\\\nwidth: 1px;\\\nbackground: #1a1a1a\\\n}\\\n.ace-wsc-theme { background-color: #111102;\\\ncolor: #DEDEDE\\\n}\\\n.ace-wsc-theme .ace_cursor {\\\ncolor: #9F9F9F\\\n}\\\n.ace-wsc-theme .ace_marker-layer .ace_selection {\\\nbackground: #424242\\\n}\\\n.ace-wsc-theme.ace_multiselect .ace_selection.ace_start {\\\nbox-shadow: 0 0 3px 0px black;\\\n}\\\n.ace-wsc-theme .ace_marker-layer .ace_step {\\\nbackground: rgb(0, 0, 0)\\\n}\\\n.ace-wsc-theme .ace_marker-layer .ace_bracket {\\\nbackground: salmon;\\\n}\\\n.ace-wsc-theme .ace_marker-layer .ace_bracket-start {\\\nbackground: orange;\\\n}\\\n.ace-wsc-theme .ace_marker-layer .ace_bracket-unmatched {\\\nmargin: -1px 0 0 -1px;\\\nborder: 1px solid #900\\\n}\\\n.ace-wsc-theme .ace_marker-layer .ace_active-line {\\\nbackground: #2A2A2A\\\n}\\\n.ace-wsc-theme .ace_gutter-active-line {\\\nbackground-color: #2A112A\\\n}\\\n.ace-wsc-theme .ace_invisible {\\\ncolor: #343434\\\n}\\\n.ace-wsc-theme .ace_operation {\\\ncolor: #ff6168\\\n}\\\n.ace-wsc-theme .ace_danny {\\\ncolor: deeppink\\\n}\\\n.ace-wsc-theme .ace_group_operation {\\\ncolor: steelblue\\\n}\\\n.ace-wsc-theme .ace_group_operation_other {\\\ncolor: #FFD866\\\n}\\\n.ace-wsc-theme .ace_o_shortcut {\\\ncolor: #E78C45\\\n}\\\n.ace-wsc-theme .ace_pipe {\\\ncolor: #D54E53\\\n}\\\n.ace-wsc-theme .ace_bracket {\\\ncolor: #7AA6DA\\\n}\\\n.ace-wsc-theme .ace_curly {\\\ncolor: tomato\\\n}\\\n.ace-wsc-theme .ace_repeat {\\\ncolor: #A9DC76\\\n}\\\n.ace-wsc-theme .ace_comment {\\\ncolor: grey\\\n}\\\n.ace-wsc-theme .ace_number {\\\ncolor: cornsilk\\\n}\\\n.ace-wsc-theme .ace_slash {\\\ncolor: tan\\\n}\\\n.ace-wsc-theme .ace_zero {\\\ncolor: wheat\\\n}\\\n.ace-wsc-theme .ace_zero {\\\ncolor: wheat\\\n}\\\n.ace-wsc-theme .ace_letter {\\\ncolor: #FFCDFF\\\n}\\\n.ace-wsc-theme .ace_string {\\\ncolor: #B9CA4A\\\n}\\\n.error {\\\n  background: lightsalmon;\\\n  opacity: 0.2;\\\n  position:absolute;\\\n  z-index:20;\\\n}\\\n';\n  var dom = require('../lib/dom');\n  dom.importCssString(exports.cssText, exports.cssClass);\n});\n(function() {\n  ace.require(['ace/theme/wsc'], function(m) {\n    if (typeof module == 'object' && typeof exports == 'object' && module) {\n      module.exports = m;\n    }\n  });\n})();\n","import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  font-family: 'Courier New', Courier, monospace;\n  text-align: center;\n  padding-top: 10px;\n  color: #edd;\n  font-size: 1.5em;\n`;\n\nexport const SubTitle = styled.p`\n  font-family: 'Courier New', Courier, monospace;\n  text-align: center;\n  color: #cbb;\n  font-size: 1em;\n`;\n\nexport const StateText = styled.p`\n  font-family: 'Courier New', Courier, monospace;\n  //text-align: center;\n  color: ${props => props.color};\n  font-size: 1em;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding-top: 0;\n  padding-bottom: 0;\n  color: gold;\n`;\n\nexport const Space = styled.div`\n  background-color: #454343;\n  height: 100vh;\n`;\n\nexport const VimBox = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n  margin-right: 10%;\n`;\n\nexport const VimText = styled.label`\n  font-family: 'Courier New', Courier, monospace;\n  text-align: bottom;\n  color: #cbb;\n  font-size: 1em;\n  padding-right: 0.2em;\n`;\n\nexport const CheckBox = styled.input`\n  vertical-align: middle;\n  margin-bottom: 0px;\n`;\n\nexport const ButtonBox = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  margin-left: 10%;\n`;\n\nexport const Button = styled.button`\n  font-size: 1em;\n  background-color: #454343;\n  margin-right: 2em;\n  color: #edd;\n  &:visited {\n    outline: none;\n  }\n  &:active {\n    outline: none;\n  }\n  &:focus {\n    outline: none;\n  }\n`;\n\nexport const TopBox = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\n","import AceEditor, { IMarker } from \"react-ace\";\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./theme\";\nimport {\n  StateText,\n  Space,\n  Title,\n  SubTitle,\n  VimBox,\n  VimText,\n  CheckBox,\n  Button,\n  ButtonBox,\n  TopBox,\n} from \"./Components\";\n\nimport WSCMode from \"./mode.js\";\nimport template from \"./template\";\nimport {\n  //playNewAudio, fadeOutSource,\n  displayError,\n} from \"./utils\";\nimport Settings from \"../settings\";\n\nimport \"ace-builds/src-noconflict/mode-elixir\";\nimport \"ace-builds/src-noconflict/theme-github\";\nimport \"ace-builds/src-noconflict/keybinding-vim\";\n\nconst BACKEND_RENDER_URL = `${Settings.backend}/render`;\nconst customMode = new WSCMode();\n\n//const audioCtx = new AudioContext();\n\nenum State {\n  Cool,\n  Rendering,\n}\n\nfunction Compose() {\n  const [state, setState] = useState<State>(State.Cool);\n  const [save, setSave] = useState<boolean>(false);\n  const [vim, setVim] = useState<boolean>(true);\n  const [renderSpace, setRenderSpace] = useState<AceEditor | null>();\n  const [language, setLanguage] = useState<string>(template);\n\n  const [render, setRender] = useState<boolean>(false);\n\n  const [markers, setMarkers] = useState<IMarker[]>([]);\n\n  const getStoredLanguage = () => {\n    const stored = localStorage.getItem(\"language\");\n    if (stored) {\n      setLanguage(stored);\n    }\n  };\n\n  useEffect(() => {\n    const submit = async () => {\n      if (render) {\n        setMarkers([]);\n\n        try {\n          setState(State.Rendering);\n          let response = await axios.post(BACKEND_RENDER_URL, { language });\n          if (renderSpace) {\n            switch (response.data.response_type) {\n              case \"RenderSuccess\":\n                localStorage.setItem(\"language\", language);\n                //playNewAudio(audioCtx, response.data.buffers, setSource, setGainNode);\n                break;\n              case \"RenderError\":\n                const error = response.data.error;\n                const n_lines = language.split(\"\\n\").length;\n                displayError(error, n_lines, renderSpace, setMarkers);\n                break;\n              default:\n                console.log(\"Not sure how we got here...\");\n                console.log(response);\n                break;\n            }\n          }\n        } catch (err) {\n          console.log(err);\n        }\n\n        setState(State.Cool);\n        setRender(false);\n      }\n    };\n\n    submit();\n  }, [render, language, renderSpace]);\n\n  useEffect(() => {\n    if (renderSpace) {\n      renderSpace.editor.getSession().setMode(customMode);\n      renderSpace.editor.setTheme(\"ace/theme/wsc\");\n    }\n  }, [renderSpace]);\n\n  useEffect(() => {\n    getStoredLanguage();\n  }, []);\n\n  useEffect(() => {\n    if (save) {\n      setSave(false);\n    }\n  }, [save]);\n\n  const stopAudio = () => {\n    //fadeOutSource(audioCtx, sources[(node + 1) % 2], gainNodes[(node + 1) % 2]);\n  };\n\n  const RenderState = () => {\n    if (state === State.Rendering) {\n      return <StateText>Rendering</StateText>;\n    } else {\n      return <div />;\n    }\n  };\n\n  return (\n    <Space>\n      <Title>WereSoCool</Title>\n      <SubTitle>Make cool sounds. Impress your friends/pets/plants.</SubTitle>\n      <TopBox>\n        <ButtonBox>\n          <Button onClick={() => setRender(true)}>Render</Button>\n          <Button onClick={() => stopAudio()}>Stop</Button>\n          <RenderState />\n        </ButtonBox>\n        <VimBox>\n          <Button onClick={() => setLanguage(template)}>Reset</Button>\n          <VimText>{vim ? \"Vim!\" : \"Vim?\"}</VimText>\n          <CheckBox\n            name=\"Vim\"\n            type=\"checkbox\"\n            checked={vim ? true : false}\n            onChange={() => setVim(!vim)}\n          />\n        </VimBox>\n      </TopBox>\n      <AceEditor\n        focus={true}\n        ref={(el) => {\n          setRenderSpace(el);\n        }}\n        placeholder=\"WereSoCool\"\n        mode=\"elixir\"\n        theme=\"github\"\n        name=\"aceEditor\"\n        keyboardHandler={vim ? \"vim\" : \"\"}\n        value={language}\n        onChange={(l) => setLanguage(l)}\n        markers={markers}\n        fontSize={20}\n        showPrintMargin={true}\n        showGutter={true}\n        highlightActiveLine={true}\n        setOptions={{\n          showLineNumbers: true,\n          tabSize: 2,\n        }}\n        commands={[\n          {\n            name: \"submit\",\n            bindKey: { win: \"Shift-Enter\", mac: \"Shift-Enter\" },\n            exec: () => {\n              setRender(true);\n            },\n          },\n          {\n            name: \"save\",\n            bindKey: { win: \"Command-s\", mac: \"Command-s\" },\n            exec: () => {\n              setSave(true);\n            },\n          },\n        ]}\n        style={{\n          height: \"80vh\",\n          width: \"80vw\",\n          marginLeft: \"10vw\",\n        }}\n      />\n    </Space>\n  );\n}\n\nexport default Compose;\n","import 'ace-builds/src-noconflict/mode-text';\n\nexport class CustomHighlightRules extends window.ace.acequire('ace/mode/text_highlight_rules')\n  .TextHighlightRules {\n  constructor() {\n    super();\n    this.$rules = {\n      start: [\n        {\n          token: 'comment',\n          regex: '--.*$',\n        },\n        {\n          token: 'number',\n          regex: '[1-9]',\n        },\n        {\n          token: 'zero',\n          regex: '[0]',\n        },\n        {\n          token: 'danny',\n          regex: 'f:|l:|g:|p:',\n        },\n        {\n          token: 'slash',\n          regex: '/',\n        },\n        {\n          token: 'keyword',\n          regex: '#',\n        },\n        {\n          token: 'curly',\n          regex: '{|}',\n        },\n        {\n          token: 'bracket',\n          regex: '\\\\[|\\\\]',\n        },\n        {\n          token: 'paren',\n          regex: '\\\\(|\\\\)',\n        },\n        {\n          token: 'pipe',\n          regex: '\\\\|',\n        },\n\n        {\n          token: 'keyword',\n          regex: '>',\n        },\n\n        {\n          token: 'curly',\n          regex: '=',\n        },\n        {\n          token: 'dot',\n          regex: '\\\\.',\n        },\n        {\n          token: 'group_operation_other',\n          regex: 'FitLength|ModulateBy|Reverse',\n        },\n        {\n          token: 'repeat',\n          regex: 'Repeat',\n        },\n        {\n          token: 'group_operation',\n          regex: 'Sequence|Overlay|Seq',\n        },\n\n        {\n          token: 'o_shortcut',\n          regex: 'O',\n        },\n\n        {\n          token: 'operation',\n          regex: 'AsIs|Tm|Ta|PanA|PanM|Gain|Length',\n        },\n        {\n          token: 'letter',\n          regex: '[a-z]',\n        },\n      ],\n    };\n  }\n}\n\nexport default class WSCMode extends window.ace.acequire('ace/mode/text').Mode {\n  constructor() {\n    super();\n    this.HighlightRules = CustomHighlightRules;\n    this.lineCommentStart = '--';\n\n    this.getNextLineIndent = function(state, line, tab) {\n      var indent = this.$getIndent(line);\n\n      var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n      var tokens = tokenizedLine.tokens;\n\n      if (tokens.length && tokens[tokens.length - 1].type === 'comment') {\n        return indent;\n      }\n\n      if (state === 'start') {\n        var match = line.match(/^.*[{([]\\s*$/);\n        if (match) {\n          indent += tab;\n        }\n      }\n\n      return indent;\n    };\n\n    //this.checkOutdent = function(state, line, input) {\n    //return this.$outdent.checkOutdent(line, input);\n    //};\n\n    //this.autoOutdent = function(state, doc, row) {\n    //this.$outdent.autoOutdent(doc, row);\n    //};\n  }\n}\n","const template = `{ f: 285, l: 1, g: 1, p: 0 }\n\novertones = {\n  O[\n    (1/1, 2, 1, 1),\n    (1/1, 0, 1, -1),\n  ]\n}\n\nthing1 = {\n  Seq [\n    Tm 1, Tm 9/8, Tm 5/4\n  ]\n}\n\nmain = {\n  overtones\n  | thing1\n}\n`;\n\nexport default template;\n\n","import { Dispatch, SetStateAction } from 'react';\nimport { Render, RenderError } from './types';\nimport AceEditor, { IMarker } from 'react-ace';\n\nexport const playNewAudio = (\n  audioCtx: AudioContext,\n  data: Render,\n  setSource: Dispatch<SetStateAction<AudioBufferSourceNode | null>>,\n  setGainNode: Dispatch<SetStateAction<GainNode>>\n) => {\n  const l_buffer = new Float32Array(data.l_buffer);\n  const r_buffer = new Float32Array(data.r_buffer);\n\n  const s = audioCtx.createBufferSource();\n  const buffer = audioCtx.createBuffer(2, l_buffer.length, audioCtx.sampleRate);\n  buffer.copyToChannel(l_buffer, 0);\n  buffer.copyToChannel(r_buffer, 1);\n\n  const g = new GainNode(audioCtx);\n  g.connect(audioCtx.destination);\n  s.buffer = buffer;\n  s.connect(g);\n  s.start();\n  setSource(s);\n  setGainNode(g);\n};\n\nexport const fadeOutSource = (\n  audioCtx: AudioContext,\n  source: AudioBufferSourceNode | null,\n  gainNode: GainNode\n) => {\n  if (source) {\n    gainNode.gain.exponentialRampToValueAtTime(0.0001, audioCtx.currentTime + 0.05);\n    source.stop(audioCtx.currentTime + 0.05);\n  }\n};\n\nexport const displayError = (\n  error: RenderError,\n  n_lines: number,\n  renderSpace: AceEditor,\n  setMarkers: Dispatch<SetStateAction<IMarker[]>>\n) => {\n  setMarkers([makeMarker(error.line, error.column, n_lines)]);\n  renderSpace.editor.gotoLine(error.line, error.column);\n};\n\nexport const makeMarker = (line: number, column: number, n_lines: number): IMarker => {\n  line -= 1;\n  return {\n    startRow: line,\n    startCol: column,\n    endRow: n_lines,\n    endCol: 0,\n    type: 'text',\n    className: 'error',\n  };\n};\n","const BACKEND = process.env.NODE_ENV === 'production' ? '/api' : 'http://localhost:4599/api';\n\nconst Settings = {\n  backend: BACKEND,\n};\n\nexport default Settings;\n","import * as React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Compose from \"./composer/Compose\";\n\nclass Paths extends React.Component {\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <Route path=\"/\" children={<Compose />} />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default Paths;\n","/* tslint:disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import App from './App';\nimport Paths from './Paths';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Paths />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}